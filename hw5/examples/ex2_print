var i, j; 
{
  i := 0;
  j := 9;
  while (i <= j) {
    i := i + 1;
  }
  assert (i == j + 1);
}

digraph G {                        
1 [label="1: skip"]
2 [label="2: skip"]
3 [label="3:  i := 0"]
4 [label="4:  j := 9"]
5 [label="5: skip"]
6 [label="6: skip"]
7 [label="7: assume i <= j"]
8 [label="8: assume !(i <= j)"]
9 [label="9: skip"]
10 [label="10: skip"]
11 [label="11:  i := i + 1"]
12 [label="12: assert i == j + 1"]
1 -> 3
3 -> 4
4 -> 5
5 -> 7
5 -> 8
6 -> 12
7 -> 9
8 -> 6
9 -> 11
10 -> 5
11 -> 10
12 -> 2
entries 
1 }


Node 1:
[0; +INF; +INF]
[+INF; 0; +INF]
[+INF; +INF; 0]
 
Node 2:
[0; 10; 9]
[-10; 0; -1]
[-9; 1; 0]
 
Node 3:
[0; 0; +INF]
[0; 0; +INF]
[+INF; +INF; 0]
 
Node 4:
[0; 0; 9]
[0; 0; 9]
[-9; -9; 0]
 
Node 5:
[0; 10; 9]
[0; 0; 9]
[-9; 1; 0]
 
Node 6:
[0; 10; 9]
[-10; 0; -1]
[-9; 1; 0]
 
Node 7:
[0; 9; 9]
[0; 0; 9]
[-9; 0; 0]
 
Node 8:
[0; 10; 9]
[-10; 0; -1]
[-9; 1; 0]
 
Node 9:
[0; 9; 9]
[0; 0; 9]
[-9; 0; 0]
 
Node 10:
[0; 10; 9]
[-1; 0; 8]
[-9; 1; 0]
 
Node 11:
[0; 10; 9]
[-1; 0; 8]
[-9; 1; 0]
 
Node 12:
[0; 10; 9]
[-10; 0; -1]
[-9; 1; 0]